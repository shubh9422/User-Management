{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/createuser/createuser.component.ts","webpack:///src/app/createuser/createuser.component.html","webpack:///src/app/mock-contacts.js","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CreateuserComponent","formBuilder","router","activeRouter","userContactDetails","submitBtnText","emailPattern","userControl","group","fname","required","lname","email","pattern","contact","status","slectedIndex","snapshot","params","parseInt","userRowData","patchValue","console","log","value","push","alert","navigate","controls","onSubmit","phoneNumberValidator","control","valid","test","invalidNumber","Contacts","UserComponent","userContacts","i","splice","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user/user.component'\nimport { CreateuserComponent } from './createuser/createuser.component'\n\nconst routes: Routes = [\n  {path: 'list', component: UserComponent},\n  {path: 'create', component: CreateuserComponent},\n  {path: 'edit/:id', component: CreateuserComponent},\n  {path: '', redirectTo: 'list', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'usermanagement';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" routerLinkActive='active' [routerLink]=\"['/list']\">User Management</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/list']\">List</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/create']\">Create</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { CreateuserComponent } from './createuser/createuser.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    CreateuserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl   } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Contacts } from '../mock-contacts'\n\n@Component({\n  selector: 'app-createuser',\n  templateUrl: './createuser.component.html',\n  styleUrls: ['./createuser.component.less']\n})\nexport class CreateuserComponent implements OnInit {\n\n  userControl: FormGroup;\n  userContactDetails = Contacts;\n  slectedIndex;\n  submitBtnText: String = \"Submit\";\n  constructor(private formBuilder: FormBuilder, private router: Router, private activeRouter: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    let emailPattern = \"^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\"\n    this.userControl = this.formBuilder.group({\n        fname: ['', Validators.required],\n        lname: ['', Validators.required],\n        email: ['', [Validators.required, Validators.pattern(emailPattern)]],\n        contact: ['', [Validators.required, Validators.pattern(\"^[6-9][0-9]{9}$\")]],\n        status: ['Active', Validators.required],\n    });\n    this.slectedIndex = 0;\n    \n    if (this.activeRouter.snapshot.params['id']) {\n      this.submitBtnText = \"Update\";\n      this.slectedIndex = parseInt(this.activeRouter.snapshot.params['id'], 10);\n      let userRowData = this.userContactDetails[this.slectedIndex - 1];\n      this.userControl.patchValue({\n        fname: userRowData.fname,\n        lname: userRowData.lname,\n        email: userRowData.email,\n        contact: userRowData.contact,\n        status: userRowData.status\n      })\n    }\n  }\n\n  get f() { return this.userControl.controls; }\n\n  onSubmit() {\n    console.log(\"submit\", this.userControl.value);\n    if (!this.slectedIndex) {\n      this.userContactDetails.push(this.userControl.value);\n      alert(\"user details added successfully\");\n    } else {\n      this.userContactDetails[this.slectedIndex - 1] = this.userControl.value;\n      alert(\"user details updated successfully\");\n    }\n    this.router.navigate(['/list']);\n  }\n\n}\n\nexport function phoneNumberValidator(\n  control: AbstractControl\n): { [key: string]: any } | null {\n  const valid = /^\\d+$/.test(control.value)\n  return valid\n    ? null\n    : { invalidNumber: { valid: false, value: control.value } }\n}\n","<div class=\"container\">\n    <form [formGroup]=\"userControl\" (ngSubmit)=\"onSubmit()\" class=\"form-horizontal\">\n    <div class=\"panel panel-primary\">\n        <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">Create User</h3>\n        </div>\n        <div class=\"panel-body\">\n        \n            <!-- First name-->\n            <div class=\"form-group\" [ngClass]=\"{ 'has-error' : f.fname.errors && (f.fname.touched || f.fname.dirty) }\">\n                <label class=\"col-sm-2 control-label\" for=\"fname\">First Name</label>\n                <div class=\"col-sm-8\">\n                    <input type=\"text\" formControlName=\"fname\" class=\"form-control\" />\n                    <span class=\"help-block\" *ngIf=\"f.fname.errors && (f.fname.touched || f.fname.dirty)\">\n                        <span *ngIf=\"f.fname.errors.required\">Firstname is required</span>\n                    </span>\n                </div>\n            </div>\n\n            <!--Last name-->\n            <div class=\"form-group\" [ngClass]=\"{ 'has-error' : f.lname.errors && (f.lname.touched || f.lname.dirty) }\">\n                <label class=\"col-sm-2 control-label\" for=\"lname\">Last Name</label>\n                <div class=\"col-sm-8\">\n                    <input type=\"text\" formControlName=\"lname\" class=\"form-control\" />\n                    <span class=\"help-block\" *ngIf=\"f.lname.errors && (f.lname.touched || f.lname.dirty)\">\n                        <span *ngIf=\"f.lname.errors.required\">Lastname is required</span>\n                    </span>\n                </div>\n            </div>\n\n            <!--Email-->\n            <div class=\"form-group\" [ngClass]=\"{ 'has-error' : f.email.errors && (f.email.touched || f.email.dirty) }\">\n                <label class=\"col-sm-2 control-label\" for=\"email\">Email</label>\n                <div class=\"col-sm-8\">\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control\" />\n                    <span class=\"help-block\" *ngIf=\"f.email.errors && (f.email.touched || f.email.dirty)\">\n                        <span *ngIf=\"f.email.errors.required\">Email is required</span>\n                        <span *ngIf=\"f.email.errors.pattern\">\n                            Value has to be a valid email address.\n                        </span>\n                    </span>\n                </div>\n            </div>\n\n            <!--Mobile-->\n            <div class=\"form-group\" [ngClass]=\"{ 'has-error' : f.contact.errors && (f.contact.touched || f.contact.dirty) }\">\n                <label class=\"col-sm-2 control-label\" for=\"contact\">Contact</label>\n                <div class=\"col-sm-8\">\n                    <input type=\"text\" formControlName=\"contact\" class=\"form-control\" />\n                    <span class=\"help-block\" *ngIf=\"f.contact.errors && (f.contact.touched || f.contact.dirty)\">\n                        <span *ngIf=\"f.contact.errors.required\">Contact Number is required</span>\n                        <span *ngIf=\"f.contact.errors.pattern\">\n                            Enter valid contact number\n                        </span>\n                    </span>\n                </div>\n            </div>\n\n            <!--Status-->\n            <div class=\"form-group\">\n                <label class=\"col-sm-2 control-label\" for=\"status\">Status</label>\n                <div class=\"col-sm-8\">\n                    <div class=\"radio-inline\">\n                        <input id=\"active\" type=\"radio\" class=\"custom-control-input\" value=\"Active\" name=\"status\" formControlName=\"status\">\n                        <label class=\"custom-control-label\" for=\"active\">Active</label>\n                    </div>\n                    <div class=\"radio-inline\">\n                        <input id=\"inactive\" type=\"radio\" class=\"custom-control-input\" value=\"Inactive\" name=\"status\" formControlName=\"status\">\n                        <label class=\"custom-control-label\" for=\"inactive\">Inactive</label>\n                    </div>\n                </div>\n            </div>\n\n            <!-- submit button -->\n            <div class=\"form-group\">\n                <label class=\"col-sm-2 control-label\"></label>\n                <div class=\"col-sm-8\">\n                    <button [disabled]=\"!userControl.valid\" class=\"btn btn-primary\">{{submitBtnText}}</button>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    </form>\n</div>\n","export const Contacts = [\r\n  { fname: 'James', lname: 'Bailey', email: \"james@gmail.com\", contact: \"6490853941\", status: \"Active\"  },\r\n  { fname: 'David', lname: 'William', email: \"david@gmail.com\", contact: \"7490853941\", status: \"Inactive\"  },\r\n  { fname: 'Richard', lname: 'Joseph', email: \"richard@gmail.com\", contact: \"9490853941\", status: \"Active\"  },\r\n  { fname: 'John', lname: 'borders', email: \"john@gmail.com\", contact: \"8490853941\", status: \"Active\"  },\r\n  { fname: 'Paul', lname: 'Baker', email: \"paul@gmail.com\", contact: \"6990853941\", status: \"Inactive\"  }\r\n];","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Contacts } from '../mock-contacts'\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.less']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private router: Router) { }\n  userContacts = Contacts;\n  ngOnInit(): void {\n  }\n\n  deleteRecords(i) {\n    this.userContacts.splice(i,1);\n    alert(\"Record deleted successfully\");\n  }\n\n  editRecords(i) {\n    this.router.navigate(['/edit', i+1]);\n  }\n\n  inactiveRecords(i) {\n    this.userContacts[i].status = \"Inactive\";\n    alert(\"Record inactivated\");\n  }\n\n  activeRecords(i) {\n    this.userContacts[i].status = \"Active\";\n    alert(\"Record activated\");\n  }\n\n}\n","<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">First Name</th>\n        <th scope=\"col\">Last Name</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Phone Number</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let contact of userContacts; let i = index\">\n        <th scope=\"row\">{{i + 1}}</th>\n        <td>{{contact.fname}}</td>\n        <td>{{contact.lname}}</td>\n        <td>{{contact.email}}</td>\n        <td>{{contact.contact}}</td>\n        <td>{{contact.status}}</td>\n        <td>\n            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" (click)=\"deleteRecords(i)\">Delete</button> &nbsp;\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"editRecords(i)\">Edit</button> &nbsp;\n            <button type=\"button\" class=\"btn btn-outline-warning btn-sm\" *ngIf=\"contact.status === 'Active'\" (click)=\"inactiveRecords(i)\">Inactive</button>\n            <button type=\"button\" class=\"btn btn-outline-success btn-sm\" *ngIf=\"contact.status !== 'Active'\" (click)=\"activeRecords(i)\">Active</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}