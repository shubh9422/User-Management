{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/createuser/createuser.component.ts","./src/app/createuser/createuser.component.html","./src/app/mock-contacts.js","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user/user.component'\nimport { CreateuserComponent } from './createuser/createuser.component'\n\nconst routes: Routes = [\n  {path: 'list', component: UserComponent},\n  {path: 'create', component: CreateuserComponent},\n  {path: 'edit/:id', component: CreateuserComponent},\n  {path: '', redirectTo: 'list', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'usermanagement';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" routerLinkActive='active' [routerLink]=\"['/list']\">User Management</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/list']\">List</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/create']\">Create</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { CreateuserComponent } from './createuser/createuser.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    CreateuserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl   } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Contacts } from '../mock-contacts'\n\n@Component({\n  selector: 'app-createuser',\n  templateUrl: './createuser.component.html',\n  styleUrls: ['./createuser.component.less']\n})\nexport class CreateuserComponent implements OnInit {\n\n  userControl: FormGroup;\n  userContactDetails = Contacts;\n  slectedIndex;\n  submitBtnText: String = \"Submit\";\n  constructor(private formBuilder: FormBuilder, private router: Router, private activeRouter: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    let emailPattern = \"^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\"\n    this.userControl = this.formBuilder.group({\n        fname: ['', Validators.required],\n        lname: ['', Validators.required],\n        email: ['', [Validators.required, Validators.pattern(emailPattern)]],\n        contact: ['', [Validators.required, Validators.pattern(\"^[6-9][0-9]{9}$\")]],\n        status: ['Active', Validators.required],\n    });\n    this.slectedIndex = 0;\n    \n    if (this.activeRouter.snapshot.params['id']) {\n      this.submitBtnText = \"Update\";\n      this.slectedIndex = parseInt(this.activeRouter.snapshot.params['id'], 10);\n      let userRowData = this.userContactDetails[this.slectedIndex - 1];\n      this.userControl.patchValue({\n        fname: userRowData.fname,\n        lname: userRowData.lname,\n        email: userRowData.email,\n        contact: userRowData.contact,\n        status: userRowData.status\n      })\n    }\n  }\n\n  get f() { return this.userControl.controls; }\n\n  onSubmit() {\n    console.log(\"submit\", this.userControl.value);\n    if (!this.slectedIndex) {\n      this.userContactDetails.push(this.userControl.value);\n      alert(\"user details added successfully\");\n    } else {\n      this.userContactDetails[this.slectedIndex - 1] = this.userControl.value;\n      alert(\"user details updated successfully\");\n    }\n    this.router.navigate(['/list']);\n  }\n\n}\n\nexport function phoneNumberValidator(\n  control: AbstractControl\n): { [key: string]: any } | null {\n  const valid = /^\\d+$/.test(control.value)\n  return valid\n    ? null\n    : { invalidNumber: { valid: false, value: control.value } }\n}\n","<div class=\"container\">\n    <form [formGroup]=\"userControl\" (ngSubmit)=\"onSubmit()\" class=\"form-horizontal\">\n    <div class=\"panel panel-primary\">\n        <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">Create User</h3>\n        </div>\n        <div class=\"panel-body\">\n        \n            <!-- First name-->\n            <div class=\"form-group\" [ngClass]=\"{ 'has-error' : f.fname.errors && (f.fname.touched || f.fname.dirty) }\">\n                <label class=\"col-sm-2 control-label\" for=\"fname\">First Name</label>\n                <div class=\"col-sm-8\">\n                    <input type=\"text\" formControlName=\"fname\" class=\"form-control\" />\n                    <span class=\"help-block\" *ngIf=\"f.fname.errors && (f.fname.touched || f.fname.dirty)\">\n                        <span *ngIf=\"f.fname.errors.required\">Firstname is required</span>\n                    </span>\n                </div>\n            </div>\n\n            <!--Last name-->\n            <div class=\"form-group\" [ngClass]=\"{ 'has-error' : f.lname.errors && (f.lname.touched || f.lname.dirty) }\">\n                <label class=\"col-sm-2 control-label\" for=\"lname\">Last Name</label>\n                <div class=\"col-sm-8\">\n                    <input type=\"text\" formControlName=\"lname\" class=\"form-control\" />\n                    <span class=\"help-block\" *ngIf=\"f.lname.errors && (f.lname.touched || f.lname.dirty)\">\n                        <span *ngIf=\"f.lname.errors.required\">Lastname is required</span>\n                    </span>\n                </div>\n            </div>\n\n            <!--Email-->\n            <div class=\"form-group\" [ngClass]=\"{ 'has-error' : f.email.errors && (f.email.touched || f.email.dirty) }\">\n                <label class=\"col-sm-2 control-label\" for=\"email\">Email</label>\n                <div class=\"col-sm-8\">\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control\" />\n                    <span class=\"help-block\" *ngIf=\"f.email.errors && (f.email.touched || f.email.dirty)\">\n                        <span *ngIf=\"f.email.errors.required\">Email is required</span>\n                        <span *ngIf=\"f.email.errors.pattern\">\n                            Value has to be a valid email address.\n                        </span>\n                    </span>\n                </div>\n            </div>\n\n            <!--Mobile-->\n            <div class=\"form-group\" [ngClass]=\"{ 'has-error' : f.contact.errors && (f.contact.touched || f.contact.dirty) }\">\n                <label class=\"col-sm-2 control-label\" for=\"contact\">Contact</label>\n                <div class=\"col-sm-8\">\n                    <input type=\"text\" formControlName=\"contact\" class=\"form-control\" />\n                    <span class=\"help-block\" *ngIf=\"f.contact.errors && (f.contact.touched || f.contact.dirty)\">\n                        <span *ngIf=\"f.contact.errors.required\">Contact Number is required</span>\n                        <span *ngIf=\"f.contact.errors.pattern\">\n                            Enter valid contact number\n                        </span>\n                    </span>\n                </div>\n            </div>\n\n            <!--Status-->\n            <div class=\"form-group\">\n                <label class=\"col-sm-2 control-label\" for=\"status\">Status</label>\n                <div class=\"col-sm-8\">\n                    <div class=\"radio-inline\">\n                        <input id=\"active\" type=\"radio\" class=\"custom-control-input\" value=\"Active\" name=\"status\" formControlName=\"status\">\n                        <label class=\"custom-control-label\" for=\"active\">Active</label>\n                    </div>\n                    <div class=\"radio-inline\">\n                        <input id=\"inactive\" type=\"radio\" class=\"custom-control-input\" value=\"Inactive\" name=\"status\" formControlName=\"status\">\n                        <label class=\"custom-control-label\" for=\"inactive\">Inactive</label>\n                    </div>\n                </div>\n            </div>\n\n            <!-- submit button -->\n            <div class=\"form-group\">\n                <label class=\"col-sm-2 control-label\"></label>\n                <div class=\"col-sm-8\">\n                    <button [disabled]=\"!userControl.valid\" class=\"btn btn-primary\">{{submitBtnText}}</button>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    </form>\n</div>\n","export const Contacts = [\r\n  { fname: 'James', lname: 'Bailey', email: \"james@gmail.com\", contact: \"6490853941\", status: \"Active\"  },\r\n  { fname: 'David', lname: 'William', email: \"david@gmail.com\", contact: \"7490853941\", status: \"Inactive\"  },\r\n  { fname: 'Richard', lname: 'Joseph', email: \"richard@gmail.com\", contact: \"9490853941\", status: \"Active\"  },\r\n  { fname: 'John', lname: 'borders', email: \"john@gmail.com\", contact: \"8490853941\", status: \"Active\"  },\r\n  { fname: 'Paul', lname: 'Baker', email: \"paul@gmail.com\", contact: \"6990853941\", status: \"Inactive\"  }\r\n];","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Contacts } from '../mock-contacts'\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.less']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private router: Router) { }\n  userContacts = Contacts;\n  ngOnInit(): void {\n  }\n\n  deleteRecords(i) {\n    this.userContacts.splice(i,1);\n    alert(\"Record deleted successfully\");\n  }\n\n  editRecords(i) {\n    this.router.navigate(['/edit', i+1]);\n  }\n\n  inactiveRecords(i) {\n    this.userContacts[i].status = \"Inactive\";\n    alert(\"Record inactivated\");\n  }\n\n  activeRecords(i) {\n    this.userContacts[i].status = \"Active\";\n    alert(\"Record activated\");\n  }\n\n}\n","<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">First Name</th>\n        <th scope=\"col\">Last Name</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Phone Number</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let contact of userContacts; let i = index\">\n        <th scope=\"row\">{{i + 1}}</th>\n        <td>{{contact.fname}}</td>\n        <td>{{contact.lname}}</td>\n        <td>{{contact.email}}</td>\n        <td>{{contact.contact}}</td>\n        <td>{{contact.status}}</td>\n        <td>\n            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" (click)=\"deleteRecords(i)\">Delete</button> &nbsp;\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"editRecords(i)\">Edit</button> &nbsp;\n            <button type=\"button\" class=\"btn btn-outline-warning btn-sm\" *ngIf=\"contact.status === 'Active'\" (click)=\"inactiveRecords(i)\">Inactive</button>\n            <button type=\"button\" class=\"btn btn-outline-success btn-sm\" *ngIf=\"contact.status !== 'Active'\" (click)=\"activeRecords(i)\">Active</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}